{"version":3,"sources":["features/navigation/navigationSlice.js","features/cart/cartSlice.js","app/Header.js","features/navigation/NavLink.js","app/Navbar.js","features/products/productsSlice.js","features/cart/CartItem.js","features/cart/CartList.js","features/cart/Summary.js","features/products/ProductModalWindow.js","features/products/ProductExcerpt.js","features/products/ProductsList.js","features/products/SortBy.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["navigationAdapter","createEntityAdapter","initialState","getInitialState","ids","entities","products","to","className","content","cart","activeId","navigationSlice","createSlice","name","reducers","changeActive","reducer","state","action","payload","prepare","actions","getSelectors","navigation","selectNavigationById","selectById","selectNavigationIds","selectIds","cartAdapter","cartCount","totalPrice","cartSlice","addToCart","id","price","includes","itemCount","addOne","changeItemCount","itemId","item","diff","deleteItem","removeOne","emptyCart","setAll","selectAllCartItems","selectAll","selectCartItemById","selectCartItemsIds","selectCartCount","createSelector","cartItems","map","selectTotalPrice","StyledHeader","styled","header","Header","location","useLocation","dispatch","useDispatch","useSelector","onClick","event","target","HTMLDialogElement","document","getElementById","showModal","pathname","StyledDiv","div","NavLink","linkId","link","StyledNav","nav","Navbar","history","useHistory","navigationIds","useEffect","push","links","key","tagName","fetchProducts","createAsyncThunk","a","axios","get","process","result","Object","values","data","obj","nanoid","productsAdapter","sortComparer","b","localeCompare","status","error","sortBy","isAscending","isOutVisible","productsSlice","addProduct","available","changeSortBy","changeIsAscending","sortProducts","sortByFunc","sortIds","isAscendingSort","sort","reverseOrder","reverse","changeIsOutVisible","buyCart","forEach","extraReducers","pending","fulfilled","upsertMany","rejected","message","selectProductById","selectProductsIds","selectIsOutVisible","selectAvailableById","productId","productAvailable","selectIsAscending","selectSortBy","CartItem","memo","useState","isWarningHidden","setIsWarningHidden","timerId","setTimeout","clearTimeout","type","onInput","value","defaultValue","StyledSection","section","CartList","cartIds","length","Fragment","StyledArticle","article","StyledTable","table","Summary","StyledDialog","dialog","ProductModalWindow","formHandler","useCallback","form","currentTarget","formElems","elements","reset","method","placeholder","minLength","maxLength","autoComplete","min","max","ButtonContainer","ProductExcerpt","product","cartItem","itemsInStock","isAvailable","isFew","isMaxInCart","newCartItem","title","disabled","ProductsList","orderedProductsIds","productsStatus","renderedProducts","SortBy","onChange","e","defaultChecked","Wrapper","App","basename","exact","path","configureStore","productsReducer","navigationReducer","cartReducer","Boolean","window","hostname","match","ReactDOM","render","StrictMode","store","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.24c185f1.chunk.js","sourcesContent":["import { createEntityAdapter, createSlice } from \"@reduxjs/toolkit\";\n\nconst navigationAdapter = createEntityAdapter();\n\nconst initialState = navigationAdapter.getInitialState({\n  ids: [\"products\", \"cart\"],\n  entities: {\n    products: { to: \"/\", className: \"active\", content: \"Product list\" },\n    cart: { to: \"/cart\", className: \"\", content: \"Cart\" },\n  },\n  activeId: \"products\",\n});\n\nconst navigationSlice = createSlice({\n  name: \"navigation\",\n  initialState,\n  reducers: {\n    changeActive: {\n      reducer(state, action) {\n        const { activeId } = action.payload;\n        if (activeId === state.activeId) return;\n\n        state.entities[state.activeId].className = \"\";\n        state.entities[activeId].className = \"active\";\n\n        state.activeId = activeId;\n      },\n      prepare(activeId) {\n        return {\n          payload: { activeId },\n        };\n      },\n    },\n  },\n});\n\nexport const { changeActive } = navigationSlice.actions;\n\nexport default navigationSlice.reducer;\n\nexport const {\n  selectById: selectNavigationById,\n  selectIds: selectNavigationIds,\n} = navigationAdapter.getSelectors((state) => state.navigation);\n","import {\n  createEntityAdapter,\n  createSelector,\n  createSlice,\n} from \"@reduxjs/toolkit\";\n\nconst cartAdapter = createEntityAdapter();\n\nconst initialState = cartAdapter.getInitialState({\n  cartCount: 0,\n  totalPrice: 0,\n});\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart(state, action) {\n      state.cartCount++;\n\n      const { id, price } = action.payload;\n      if (state.ids.includes(id)) state.entities[id].itemCount++;\n      else cartAdapter.addOne(state, action.payload);\n\n      state.totalPrice += price;\n    },\n    changeItemCount: {\n      reducer(state, action) {\n        const { itemId, itemCount } = action.payload;\n\n        const item = state.entities[itemId];\n        const diff = item.itemCount - itemCount;\n\n        item.itemCount = itemCount;\n        state.cartCount -= diff;\n        state.totalPrice -= item.price * diff;\n      },\n      prepare(itemId, itemCount) {\n        return {\n          payload: { itemId, itemCount },\n        };\n      },\n    },\n    deleteItem(state, action) {\n      const id = action.payload;\n      const item = state.entities[id];\n\n      cartAdapter.removeOne(state, action.payload);\n\n      state.cartCount -= item.itemCount;\n      state.totalPrice -= item.price * item.itemCount;\n    },\n    emptyCart(state) {\n      cartAdapter.setAll(state, {});\n      state.cartCount = 0;\n      state.totalPrice = 0;\n    },\n  },\n});\n\nexport default cartSlice.reducer;\n\nexport const {\n  selectAll: selectAllCartItems,\n  selectById: selectCartItemById,\n  selectIds: selectCartItemsIds,\n} = cartAdapter.getSelectors((state) => state.cart);\n\nexport const {\n  addToCart,\n  changeItemCount,\n  deleteItem,\n  emptyCart,\n} = cartSlice.actions;\n\nexport const selectAllCartItemsCount = createSelector(\n  [selectAllCartItems],\n  (cartItems) => cartItems.map((item) => item.itemCount)\n);\n\nexport const selectCartCount = createSelector(\n  [(state) => state.cart.cartCount],\n  (cartCount) => cartCount\n);\n\nexport const selectTotalPrice = createSelector(\n  [(state) => state.cart.totalPrice],\n  (totalPrice) => totalPrice\n);\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport { changeActive } from \"../features/navigation/navigationSlice\";\nimport { selectCartCount } from \"../features/cart/cartSlice\";\n\nconst StyledHeader = styled.header`\n  display: flex;\n  justify-content: space-between;\n\n  padding: 10px 50px 10px 50px;\n\n  border-bottom: 2px solid black;\n\n  h1 {\n    font-size: 30px;\n  }\n\n  .header-right {\n    display: flex;\n    align-items: center;\n\n    button {\n      margin-right: 40px;\n\n      height: 30px;\n      width: 120px;\n\n      border-radius: 2px;\n      border: 1px solid black;\n\n      font-size: inherit;\n    }\n\n    h2 {\n      width: 100px;\n      font-weight: normal;\n    }\n  }\n`;\n\nexport const Header = () => {\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const cartCount = useSelector((state) => selectCartCount(state));\n\n  const highlightNavLink = (event) => {\n    const clickedElementId = event.target.id;\n    if (!clickedElementId || ![\"products\", \"cart\"].includes(event.target.id))\n      return;\n    dispatch(changeActive(event.target.id));\n  };\n\n  const isShoppingFinished = () =>\n    location.pathname === \"/summary\" ? 0 : cartCount;\n\n  const isDialogSupported = () =>\n    typeof HTMLDialogElement === \"function\" && (\n      <button onClick={() => document.getElementById(\"modal\").showModal()}>\n        new product\n      </button>\n    );\n\n  return (\n    <StyledHeader onClick={highlightNavLink}>\n      <h1>\n        <Link id=\"products\" to=\"/\">\n          My simple shop\n        </Link>\n      </h1>\n      <div className=\"header-right\">\n        {isDialogSupported()}\n        <Link id=\"cart\" to=\"/cart\">\n          <h2>Cart {isShoppingFinished()}</h2>\n        </Link>\n      </div>\n    </StyledHeader>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport { selectNavigationById } from \"./navigationSlice\";\n\nconst StyledDiv = styled.div`\n  display: flex;\n  margin-bottom: 3px;\n\n  a {\n    padding: 1px 0;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport const NavLink = ({ linkId }) => {\n  const link = useSelector((state) => selectNavigationById(state, linkId));\n\n  return (\n    <StyledDiv className={link.className}>\n      <Link id={linkId} to={link.to}>\n        {link.content}\n      </Link>\n    </StyledDiv>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport {\n  changeActive,\n  selectNavigationIds,\n} from \"../features/navigation/navigationSlice\";\nimport { NavLink } from \"../features/navigation/NavLink\";\n\nconst StyledNav = styled.nav`\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 0;\n\n  padding-top: 20px;\n\n  width: 200px;\n\n  font-size: 18px;\n  line-height: 1.4em;\n  text-align: center;\n\n  border-right: 2px solid black;\n\n  .active {\n    box-shadow: 0 0 0 1px black;\n    background-color: #e9e9e9;\n  }\n`;\n\nexport const Navbar = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const navigationIds = useSelector(selectNavigationIds);\n\n  useEffect(() => {\n    if (history.location.pathname === \"/\") return;\n    history.push(\"/\");\n  }, [history]);\n\n  const links = navigationIds.map((linkId) => (\n    <NavLink key={linkId} linkId={linkId} />\n  ));\n\n  const highlightNavLink = (event) => {\n    if (event.target.tagName !== \"A\") return;\n\n    dispatch(changeActive(event.target.id));\n  };\n\n  return <StyledNav onClick={highlightNavLink}>{links}</StyledNav>;\n};\n","import {\n  createAsyncThunk,\n  createEntityAdapter,\n  createSelector,\n  createSlice,\n  nanoid,\n} from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const fetchProducts = createAsyncThunk(\n  \"products/fetchProducts\",\n  async () => {\n    const result = await axios.get(`${process.env.PUBLIC_URL}/products.json`);\n    return Object.values(result.data).map((obj) => {\n      obj.id = nanoid();\n      return obj;\n    });\n  }\n);\n\nconst productsAdapter = createEntityAdapter({\n  sortComparer: (a, b) => a.name.localeCompare(b.name),\n});\n\nconst initialState = productsAdapter.getInitialState({\n  status: \"idle\",\n  error: null,\n  sortBy: \"name\",\n  isAscending: true,\n  isOutVisible: false,\n});\n\nconst productsSlice = createSlice({\n  name: \"products\",\n  initialState,\n  reducers: {\n    addProduct: {\n      reducer: productsAdapter.addOne,\n      prepare(name, price, available) {\n        return {\n          payload: {\n            id: nanoid(),\n            name,\n            price,\n            available,\n          },\n        };\n      },\n    },\n    changeSortBy: {\n      reducer(state, action) {\n        const { sortBy } = action.payload;\n        state.sortBy = sortBy;\n      },\n      prepare(sortBy) {\n        return {\n          payload: { sortBy },\n        };\n      },\n    },\n    changeIsAscending: {\n      reducer(state, action) {\n        const { isAscending } = action.payload;\n        state.isAscending = isAscending;\n      },\n      prepare(isAscending) {\n        return {\n          payload: { isAscending },\n        };\n      },\n    },\n    sortProducts(state) {\n      let sortByFunc;\n      switch (state.sortBy) {\n        case \"name\":\n          sortByFunc = (a, b) => a.name.localeCompare(b.name);\n          break;\n        case \"price\":\n          sortByFunc = (a, b) => +a.price - +b.price;\n          break;\n        case \"availability\":\n          sortByFunc = (a, b) => +a.available - +b.available;\n          break;\n        default:\n          break;\n      }\n\n      const sortIds = (a, b) =>\n        sortByFunc(state.entities[a], state.entities[b]);\n\n      const isAscendingSort = state.isAscending\n        ? (a, b) => sortIds(a, b)\n        : (a, b) => sortIds(b, a);\n\n      state.ids.sort(isAscendingSort);\n    },\n    reverseOrder(state) {\n      state.ids.reverse();\n    },\n    changeIsOutVisible(state) {\n      state.isOutVisible = !state.isOutVisible;\n    },\n    buyCart: {\n      reducer(state, action) {\n        const cartItems = action.payload;\n\n        cartItems.forEach((item) => {\n          state.entities[item.id].available -= item.itemCount;\n        });\n      },\n    },\n  },\n  extraReducers: {\n    [fetchProducts.pending]: (state) => {\n      state.status = \"loading\";\n    },\n    [fetchProducts.fulfilled]: (state, action) => {\n      state.status = \"succeeded\";\n      productsAdapter.upsertMany(state, action.payload);\n    },\n    [fetchProducts.rejected]: (state, action) => {\n      state.status = \"failed\";\n      state.error = action.error.message;\n    },\n  },\n});\n\nexport const {\n  addProduct,\n  buyCart,\n  changeIsOutVisible,\n  sortProducts,\n  reverseOrder,\n  changeSortBy,\n  changeIsAscending,\n} = productsSlice.actions;\n\nexport default productsSlice.reducer;\n\nexport const {\n  selectById: selectProductById,\n  selectIds: selectProductsIds,\n} = productsAdapter.getSelectors((state) => state.products);\n\nexport const selectIsOutVisible = createSelector(\n  [(state) => state.products.isOutVisible],\n  (isOutVisible) => isOutVisible\n);\n\nexport const selectAvailableById = createSelector(\n  (state, productId) => selectProductById(state, productId).available,\n  (productAvailable) => productAvailable\n);\n\nexport const selectIsAscending = createSelector(\n  [(state) => state.products.isAscending],\n  (isAscending) => isAscending\n);\n\nexport const selectSortBy = createSelector(\n  [(state) => state.products.sortBy],\n  (sortBy) => sortBy\n);\n","import React, { memo, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport { changeItemCount, deleteItem, selectCartItemById } from \"./cartSlice\";\n\nimport { selectAvailableById } from \"../products/productsSlice\";\n\nconst StyledDiv = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  flex-grow: 1;\n\n  margin-bottom: 20px;\n  padding: 0 10px;\n  height: 40px;\n\n  border: 1px solid #8f8f8f;\n  border-radius: 2px;\n\n  .carrItem-left {\n    display: flex;\n    align-items: center;\n  }\n\n  h4 {\n    padding: 0;\n    margin-right: 10px;\n  }\n\n  input {\n    font-size: inherit;\n    text-align: right;\n\n    width: 50px;\n    margin: 0 20px 0 15px;\n\n    border: 1px solid black;\n    border-radius: 5px;\n\n    &::-webkit-inner-spin-button,\n    &::-webkit-outer-spin-button {\n      opacity: 1;\n    }\n\n    &:focus {\n      outline: transparent;\n    }\n  }\n\n  button {\n    margin: 0 0 2px 15px;\n    padding: 0 3px 1px 3px;\n\n    font-size: 12px;\n\n    border-radius: 15px;\n  }\n`;\n\nexport const CartItem = memo(({ itemId }) => {\n  const dispatch = useDispatch();\n  const available = useSelector((state) => selectAvailableById(state, itemId));\n  const item = useSelector((state) => selectCartItemById(state, itemId));\n  const [isWarningHidden, setIsWarningHidden] = useState(\"hidden\");\n\n  const itemCountHandler = (event) => {\n    let value = event.target.value;\n\n    if (value === \"\") {\n      event.target.value = \"\";\n      return;\n    }\n\n    if (!value || value <= 0) value = 1;\n\n    if (value > available) {\n      value = available;\n      setIsWarningHidden(\"\");\n    }\n\n    event.target.value = value;\n    dispatch(changeItemCount(itemId, value));\n  };\n\n  useEffect(() => {\n    let timerId;\n\n    if (item.itemCount === available) {\n      if (isWarningHidden === \"\") {\n        timerId = setTimeout(() => {\n          setIsWarningHidden(\"hidden\");\n        }, 2000);\n      }\n    }\n\n    return () => clearTimeout(timerId);\n  }, [item.itemCount, available, isWarningHidden]);\n\n  return (\n    <StyledDiv>\n      <div className=\"carrItem-left\">\n        <h4>{item.name}</h4>\n        <span>({item.price * item.itemCount}$)</span>\n      </div>\n      <div>\n        <span className={isWarningHidden}>\n          <i>no more in stock</i>\n        </span>\n        <input\n          type=\"number\"\n          onInput={itemCountHandler}\n          defaultValue={item.itemCount}\n        />\n        <button onClick={() => dispatch(deleteItem(itemId))}>✖</button>\n      </div>\n    </StyledDiv>\n  );\n});\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport { CartItem } from \"./CartItem\";\n\nimport { selectCartItemsIds, selectTotalPrice } from \"./cartSlice\";\n\nconst StyledSection = styled.section`\n  margin-top: 20px;\n\n  h2 {\n    font-weight: normal;\n    margin-bottom: 20px;\n  }\n\n  .button-container {\n    display: flex;\n    justify-content: center;\n\n    button {\n      font-size: inherit;\n\n      padding: 6px 20px 5px 20px;\n\n      border-radius: 2px;\n    }\n  }\n`;\n\nexport const CartList = () => {\n  const cartIds = useSelector(selectCartItemsIds);\n  const totalPrice = useSelector((state) => selectTotalPrice(state));\n\n  const cartItems = cartIds.map((itemId) => (\n    <CartItem key={itemId} itemId={itemId} />\n  ));\n\n  return (\n    <StyledSection>\n      {cartIds.length === 0 ? (\n        <span>Your cart is empty</span>\n      ) : (\n        <React.Fragment>\n          <h2>Total price: {totalPrice}$</h2>\n          {cartItems}\n          <div className=\"button-container\">\n            <Link to=\"/summary\">\n              <button>Next</button>\n            </Link>\n          </div>\n        </React.Fragment>\n      )}\n    </StyledSection>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport {\n  emptyCart,\n  selectAllCartItems,\n  selectCartCount,\n  selectTotalPrice,\n} from \"./cartSlice\";\nimport { buyCart } from \"../products/productsSlice\";\n\nconst StyledArticle = styled.article`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n\n  h2,\n  h3 {\n    margin: 0;\n  }\n\n  .congratulations {\n    margin: 25px 0 30px 0;\n\n    text-align: center;\n\n    h3 {\n      margin-top: 5px;\n      font-weight: normal;\n    }\n  }\n\n  .total {\n    display: flex;\n    justify-content: space-around;\n\n    margin-top: 25px;\n\n    h3 span {\n      font-weight: normal;\n    }\n  }\n`;\n\nconst StyledTable = styled.table`\n  border: 1px solid black;\n  border-collapse: collapse;\n\n  th,\n  td {\n    border: 1px solid black;\n\n    padding: 5px 10px;\n\n    text-align: center;\n  }\n\n  td:first-child {\n    text-align: left;\n  }\n\n  th {\n    background-color: #e9e9e9;\n  }\n`;\n\nexport const Summary = () => {\n  const dispatch = useDispatch();\n  const cartItems = useSelector(selectAllCartItems);\n  const totalPrice = useSelector((state) => selectTotalPrice(state));\n  const cartCount = useSelector((state) => selectCartCount(state));\n\n  useEffect(() => {\n    return () => {\n      dispatch(buyCart(cartItems));\n      dispatch(emptyCart());\n    };\n  }, [dispatch, cartItems]);\n\n  return (\n    <StyledArticle>\n      <section className=\"congratulations\">\n        <h2>Successful shopping!</h2>\n        <h3>Thank you</h3>\n      </section>\n      <section>\n        <StyledTable>\n          <thead>\n            <tr>\n              <th>Products</th>\n              <th>Price</th>\n              <th>Amount</th>\n              <th>Sum</th>\n            </tr>\n          </thead>\n          <tbody>\n            {cartItems.map((item) => (\n              <tr key={item.id}>\n                <td>{item.name}</td>\n                <td>{item.price}</td>\n                <td>{item.itemCount}</td>\n                <td>{item.price * item.itemCount}</td>\n              </tr>\n            ))}\n          </tbody>\n        </StyledTable>\n        <div className=\"total\">\n          <h3>\n            Items: <span>{cartCount} items</span>\n          </h3>\n          <h3>\n            Cost: <span>{totalPrice}$</span>\n          </h3>\n        </div>\n      </section>\n    </StyledArticle>\n  );\n};\n","import React, { useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\n\nimport { addProduct, sortProducts } from \"./productsSlice\";\n\nconst StyledDialog = styled.dialog`\n  border: 1px solid black;\n  border-radius: 10px;\n\n  padding: 0 30px 30px 30px;\n\n  h3 {\n    text-align: center;\n  }\n\n  form {\n    display: flex;\n    flex-direction: column;\n\n    margin-top: 10px;\n\n    .input-block {\n      display: flex;\n      justify-content: flex-end;\n      align-items: center;\n\n      input {\n        width: 170px;\n\n        margin: 5px 0 10px 10px;\n        padding: 3px 0 3px 5px;\n\n        font-size: inherit;\n      }\n\n      label {\n        padding-bottom: 5px;\n      }\n    }\n\n    .buttons {\n      display: flex;\n      justify-content: space-around;\n\n      margin-top: 15px;\n\n      button {\n        width: 80px;\n        height: 30px;\n\n        border-radius: 10px;\n\n        font-size: inherit;\n      }\n    }\n  }\n`;\n\nexport const ProductModalWindow = () => {\n  const dispatch = useDispatch();\n\n  const formHandler = useCallback(\n    (event) => {\n      const target = event.target;\n      if (target.tagName !== \"BUTTON\") return;\n\n      const form = event.currentTarget;\n      const formElems = form.elements;\n\n      if (target.name === \"submit\") {\n        const [name, price, available] = [\n          formElems[\"name\"].value,\n          +formElems[\"price\"].value,\n          +formElems[\"available\"].value,\n        ];\n\n        dispatch(addProduct(name, price, available));\n        dispatch(sortProducts());\n      }\n\n      form.reset();\n    },\n    [dispatch]\n  );\n\n  return (\n    <StyledDialog id=\"modal\">\n      <h3>Create New Product</h3>\n      <form method=\"dialog\" onClick={formHandler}>\n        <div className=\"input-block\">\n          <label>Name:</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Apple iPhone\"\n            minLength=\"2\"\n            maxLength=\"60\"\n            autoComplete=\"off\"\n          />\n        </div>\n\n        <div className=\"input-block\">\n          <label>Price:</label>\n          <input\n            type=\"number\"\n            name=\"price\"\n            placeholder=\"500\"\n            min=\"0\"\n            max=\"10000000\"\n            autoComplete=\"off\"\n          />\n        </div>\n\n        <div className=\"input-block\">\n          <label>Available:</label>\n          <input\n            type=\"number\"\n            name=\"available\"\n            placeholder=\"40\"\n            min=\"0\"\n            max=\"100000\"\n            autoComplete=\"off\"\n          />\n        </div>\n\n        <div className=\"buttons\">\n          <button name=\"submit\">Submit</button>\n          <button name=\"cancel\">Cancel</button>\n        </div>\n      </form>\n    </StyledDialog>\n  );\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport { selectIsOutVisible, selectProductById } from \"./productsSlice\";\nimport { addToCart, selectCartItemById } from \"../cart/cartSlice\";\n\nconst StyledDiv = styled.div`\n  padding: 15px 10px;\n  margin: 10px;\n\n  border: 1px solid black;\n\n  width: 150px;\n  height: 110px;\n\n  line-height: 1.4em;\n\n  h3 {\n    margin: 0 0 8px 0;\n  }\n\n  .in-stock {\n    color: #008000;\n  }\n\n  .few-in-stock {\n    color: #ddb059;\n  }\n\n  .out-of-stock {\n    color: red;\n  }\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  margin-top: 10px;\n\n  button {\n    font-size: inherit;\n    padding: 3px 15px;\n    border-radius: 10px;\n  }\n\n  .all-in-cart {\n    padding-top: 3px;\n    font-style: italic;\n  }\n`;\n\nexport const ProductExcerpt = ({ productId }) => {\n  const dispatch = useDispatch();\n  const product = useSelector((state) => selectProductById(state, productId));\n  const cartItem = useSelector((state) => selectCartItemById(state, productId));\n  const isOutVisible = useSelector((state) => selectIsOutVisible(state));\n\n  const itemsInStock = product.available;\n\n  const isAvailable = itemsInStock > 0;\n  const isFew = itemsInStock < 5;\n  const isMaxInCart = cartItem && cartItem.itemCount >= itemsInStock;\n\n  const newCartItem = {\n    id: product.id,\n    name: product.name,\n    price: product.price,\n    itemCount: 1,\n  };\n\n  return (\n    <StyledDiv className={!isOutVisible && !isAvailable ? \"hidden\" : \"\"}>\n      <h3>{product.name}</h3>\n      <div>\n        Price: <i>{product.price}</i>\n      </div>\n      <div>\n        {isAvailable ? (\n          <span title={`${itemsInStock} left`}>\n            {isFew ? (\n              <span className=\"few-in-stock\">A few left</span>\n            ) : (\n              <span className=\"in-stock\">In stock</span>\n            )}\n          </span>\n        ) : (\n          <span className=\"out-of-stock\">Out of stock</span>\n        )}\n      </div>\n      <ButtonContainer>\n        {isMaxInCart ? (\n          <span className=\"all-in-cart\">all in cart</span>\n        ) : (\n          <button\n            disabled={!isAvailable}\n            onClick={() => dispatch(addToCart(newCartItem))}\n          >\n            add to cart\n          </button>\n        )}\n      </ButtonContainer>\n    </StyledDiv>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport {\n  fetchProducts,\n  selectProductsIds,\n  sortProducts,\n} from \"./productsSlice\";\n\nimport { ProductExcerpt } from \"./ProductExcerpt\";\n\nconst StyledSection = styled.section`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const ProductsList = () => {\n  const dispatch = useDispatch();\n  const orderedProductsIds = useSelector(selectProductsIds);\n\n  const productsStatus = useSelector((state) => state.products.status);\n  const error = useSelector((state) => state.products.error);\n\n  useEffect(() => {\n    if (productsStatus === \"idle\") {\n      dispatch(fetchProducts());\n      dispatch(sortProducts());\n    }\n  }, [productsStatus, dispatch]);\n\n  let renderedProducts = () => {\n    switch (productsStatus) {\n      case \"loading\":\n        return <div>Loading...</div>;\n      case `succeeded`:\n        return orderedProductsIds.map((productId) => (\n          <ProductExcerpt key={productId} productId={productId} />\n        ));\n      case \"failed\":\n        return <div>{error}</div>;\n      default:\n        break;\n    }\n  };\n\n  return <StyledSection>{renderedProducts()}</StyledSection>;\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport {\n  changeIsAscending,\n  changeIsOutVisible,\n  changeSortBy,\n  reverseOrder,\n  selectIsAscending,\n  selectIsOutVisible,\n  selectSortBy,\n  sortProducts,\n} from \"./productsSlice\";\n\nconst StyledDiv = styled.div`\n  display: flex;\n  align-items: center;\n\n  margin: 15px 0 15px 10px;\n\n  select {\n    font-size: inherit;\n    font-family: inherit;\n\n    height: 30px;\n    width: 110px;\n\n    border-radius: 0;\n\n    &:focus {\n      outline: transparent;\n    }\n  }\n\n  button {\n    margin-left: 5px;\n    padding-bottom: 3px;\n\n    background-color: #e9e7e7;\n\n    font-size: inherit;\n\n    height: 30px;\n    width: 30px;\n\n    border: 1px solid black;\n  }\n\n  .checkbox-container {\n    display: flex;\n    align-items: center;\n\n    margin: 3px 0 0 25px;\n\n    input {\n      margin-right: 10px;\n    }\n  }\n`;\n\nexport const SortBy = () => {\n  const dispatch = useDispatch();\n  const isAscending = useSelector((state) => selectIsAscending(state));\n  const sortBy = useSelector((state) => selectSortBy(state));\n  const isOutVisible = useSelector((state) => selectIsOutVisible(state));\n\n  return (\n    <StyledDiv>\n      <select\n        onChange={(e) => {\n          dispatch(changeSortBy(e.target.value));\n          dispatch(sortProducts());\n        }}\n        defaultValue={sortBy}\n      >\n        <option value=\"name\">Name</option>\n        <option value=\"price\">Price</option>\n        <option value=\"availability\">Available</option>\n      </select>\n      <button\n        onClick={() => {\n          dispatch(changeIsAscending(!isAscending));\n          dispatch(reverseOrder());\n        }}\n      >\n        {isAscending ? \"↑\" : \"↓\"}\n      </button>\n      <div className=\"checkbox-container\">\n        <input\n          type=\"checkbox\"\n          onClick={() => dispatch(changeIsOutVisible())}\n          defaultChecked={isOutVisible}\n        />\n        <label>Show non-available</label>\n      </div>\n    </StyledDiv>\n  );\n};\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\n\nimport { Header } from \"./app/Header\";\nimport { Navbar } from \"./app/Navbar\";\nimport { CartList } from \"./features/cart/CartList\";\nimport { Summary } from \"./features/cart/Summary\";\nimport { ProductModalWindow } from \"./features/products/ProductModalWindow\";\nimport { ProductsList } from \"./features/products/ProductsList\";\nimport { SortBy } from \"./features/products/SortBy\";\n\nconst Wrapper = styled.div`\n  position: absolute;\n\n  display: flex;\n  flex-direction: column;\n\n  width: 100%;\n  height: 100%;\n\n  main {\n    display: flex;\n    flex-grow: 1;\n\n    article {\n      flex-grow: 1;\n      padding: 0 25px 0 20px;\n    }\n  }\n`;\n\nconst isDialogSupported = () =>\n  typeof HTMLDialogElement === \"function\" && <ProductModalWindow />;\n\nfunction App() {\n  return (\n    <Router basename=\"/\">\n      <Wrapper>\n        {isDialogSupported()}\n        <Header />\n        <main>\n          <Navbar />\n          <article>\n            <Switch>\n              <Route exact path=\"/\">\n                <SortBy />\n                <ProductsList />\n              </Route>\n\n              <Route exact path=\"/cart\">\n                <CartList />\n              </Route>\n\n              <Route exact path=\"/summary\">\n                <Summary />\n              </Route>\n\n              <Redirect to=\"/\" />\n            </Switch>\n          </article>\n        </main>\n      </Wrapper>\n    </Router>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport productsReducer from \"../features/products/productsSlice\";\nimport navigationReducer from \"../features/navigation/navigationSlice\";\nimport cartReducer from \"../features/cart/cartSlice\";\n\nexport default configureStore({\n  reducer: {\n    products: productsReducer,\n    navigation: navigationReducer,\n    cart: cartReducer,\n  },\n});\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}