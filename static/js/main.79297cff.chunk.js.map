{"version":3,"sources":["features/navigation/navigationSlice.js","features/cart/cartSlice.js","app/Header.js","app/Navbar.js","features/products/productsSlice.js","features/cart/CartItem.js","features/cart/CartList.js","features/cart/Summary.js","features/products/ProductModalWindow.js","features/products/ProductExcerpt.js","features/products/ProductsList.js","features/products/SortBy.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["navigationSlice","createSlice","name","initialState","activeId","reducers","changeActive","state","action","payload","actions","selectActiveById","createSelector","linkId","navigation","active","cartAdapter","createEntityAdapter","getInitialState","cartCount","totalPrice","cartSlice","addToCart","id","price","ids","includes","entities","itemCount","addOne","changeItemCount","reducer","itemId","item","diff","prepare","deleteItem","removeOne","emptyCart","setAll","getSelectors","cart","selectAllCartItems","selectAll","selectCartItemById","selectById","selectCartItemsIds","selectIds","selectTotal","selectCartCount","cartItems","map","selectTotalPrice","StyledHeader","styled","header","CartCounter","location","useLocation","useSelector","pathname","Header","dispatch","useDispatch","onClick","event","target","to","className","HTMLDialogElement","document","getElementById","showModal","StyledNav","nav","NavLink","content","Navbar","history","useHistory","useEffect","push","tagName","fetchProducts","createAsyncThunk","a","axios","get","process","result","Object","values","data","obj","nanoid","hidden","available","productsAdapter","sortComparer","b","localeCompare","status","error","sortBy","isAscending","isOutVisible","productsSlice","addProduct","changeSortBy","changeIsAscending","sortProducts","sortByFunc","sortIds","isAscendingSort","sort","reverseOrder","reverse","changeIsOutVisible","buyCart","forEach","extraReducers","pending","fulfilled","upsertMany","rejected","message","products","selectProductById","selectProductsIds","selectIsOutVisible","selectAvailableById","productId","product","selectIsHiddenById","selectIsAscending","selectSortBy","StyledDiv","div","CartItem","memo","useState","isWarningHidden","setIsWarningHidden","timerId","setTimeout","clearTimeout","type","onInput","value","defaultValue","StyledSection","section","TotalPrice","CartList","cartIds","key","length","Fragment","StyledArticle","article","StyledTable","table","Summary","StyledDialog","dialog","ProductModalWindow","formHandler","useCallback","form","currentTarget","formElems","elements","reset","method","placeholder","minLength","maxLength","autoComplete","min","max","ButtonContainer","ProductExcerpt","cartItem","isHidden","itemsInStock","isAvailable","isFew","isMaxInCart","newCartItem","title","disabled","ProductsList","orderedProductsIds","productsStatus","renderedProducts","SelectSortBy","onChange","e","OrderButton","OutCheckbox","defaultChecked","SortBy","Wrapper","App","basename","exact","path","configureStore","productsReducer","navigationReducer","cartReducer","Boolean","window","hostname","match","ReactDOM","render","StrictMode","store","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.79297cff.chunk.js","sourcesContent":["import { createSelector, createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  activeId: \"products\",\n};\n\nconst navigationSlice = createSlice({\n  name: \"navigation\",\n  initialState,\n  reducers: {\n    changeActive(state, action) {\n      state.activeId = action.payload;\n    },\n  },\n});\n\nexport const { changeActive } = navigationSlice.actions;\n\nexport default navigationSlice.reducer;\n\nexport const selectActiveById = createSelector(\n  (state, linkId) => state.navigation.activeId === linkId,\n  (active) => active\n);\n","import {\n  createEntityAdapter,\n  createSelector,\n  createSlice,\n} from \"@reduxjs/toolkit\";\n\nconst cartAdapter = createEntityAdapter();\n\nconst initialState = cartAdapter.getInitialState({\n  cartCount: 0,\n  totalPrice: 0,\n});\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart(state, action) {\n      state.cartCount++;\n\n      const { id, price } = action.payload;\n      if (state.ids.includes(id)) state.entities[id].itemCount++;\n      else cartAdapter.addOne(state, action.payload);\n\n      state.totalPrice += price;\n    },\n    changeItemCount: {\n      reducer(state, action) {\n        const { itemId, itemCount } = action.payload;\n\n        const item = state.entities[itemId];\n        const diff = item.itemCount - itemCount;\n\n        item.itemCount = itemCount;\n        state.cartCount -= diff;\n        state.totalPrice -= item.price * diff;\n      },\n      prepare(itemId, itemCount) {\n        return {\n          payload: { itemId, itemCount },\n        };\n      },\n    },\n    deleteItem(state, action) {\n      const id = action.payload;\n      const item = state.entities[id];\n\n      cartAdapter.removeOne(state, action.payload);\n\n      state.cartCount -= item.itemCount;\n      state.totalPrice -= item.price * item.itemCount;\n    },\n    emptyCart(state) {\n      cartAdapter.setAll(state, {});\n      state.cartCount = 0;\n      state.totalPrice = 0;\n    },\n  },\n});\n\nexport default cartSlice.reducer;\n\nexport const {\n  selectAll: selectAllCartItems,\n  selectById: selectCartItemById,\n  selectIds: selectCartItemsIds,\n  selectTotal: selectCartTotal,\n} = cartAdapter.getSelectors((state) => state.cart);\n\nexport const {\n  addToCart,\n  changeItemCount,\n  deleteItem,\n  emptyCart,\n} = cartSlice.actions;\n\nexport const selectAllCartItemsCount = createSelector(\n  [selectAllCartItems],\n  (cartItems) => cartItems.map((item) => item.itemCount)\n);\n\nexport const selectCartCount = createSelector(\n  [(state) => state.cart.cartCount],\n  (cartCount) => cartCount\n);\n\nexport const selectTotalPrice = createSelector(\n  [(state) => state.cart.totalPrice],\n  (totalPrice) => totalPrice\n);\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport { changeActive } from \"../features/navigation/navigationSlice\";\nimport { selectCartCount } from \"../features/cart/cartSlice\";\n\nconst StyledHeader = styled.header`\n  display: flex;\n  justify-content: space-between;\n\n  padding: 10px 50px 10px 50px;\n\n  border-bottom: 2px solid black;\n\n  h1 {\n    font-size: 30px;\n  }\n\n  .header-right {\n    display: flex;\n    align-items: center;\n\n    button {\n      margin-right: 40px;\n\n      height: 30px;\n      width: 120px;\n\n      border-radius: 2px;\n      border: 1px solid black;\n\n      font-size: inherit;\n    }\n\n    h2 {\n      width: 100px;\n      font-weight: normal;\n    }\n  }\n`;\n\nconst CartCounter = () => {\n  const location = useLocation();\n  const cartCount = useSelector((state) => selectCartCount(state));\n\n  const isShoppingFinished = () =>\n    location.pathname === \"/summary\" ? 0 : cartCount;\n\n  return <span>{isShoppingFinished()}</span>;\n};\n\nexport const Header = () => {\n  const dispatch = useDispatch();\n\n  const highlightNavLink = (event) => {\n    const clickedElementId = event.target.id;\n    if (!clickedElementId || ![\"products\", \"cart\"].includes(event.target.id))\n      return;\n    dispatch(changeActive(event.target.id));\n  };\n\n  const isDialogSupported = () =>\n    typeof HTMLDialogElement === \"function\" && (\n      <button onClick={() => document.getElementById(\"modal\").showModal()}>\n        new product\n      </button>\n    );\n\n  return (\n    <StyledHeader onClick={highlightNavLink}>\n      <h1>\n        <Link id=\"products\" to=\"/\">\n          My simple shop\n        </Link>\n      </h1>\n      <div className=\"header-right\">\n        {isDialogSupported()}\n        <Link id=\"cart\" to=\"/cart\">\n          <h2>\n            Cart <CartCounter />\n          </h2>\n        </Link>\n      </div>\n    </StyledHeader>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport {\n  changeActive,\n  selectActiveById,\n} from \"../features/navigation/navigationSlice\";\n\nconst StyledNav = styled.nav`\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 0;\n\n  padding-top: 20px;\n\n  width: 200px;\n\n  font-size: 18px;\n  line-height: 1.4em;\n  text-align: center;\n\n  border-right: 2px solid black;\n\n  .active {\n    box-shadow: 0 0 0 1px black;\n    background-color: #e9e9e9;\n  }\n`;\n\nconst NavLink = ({ id, to, content }) => {\n  const active = useSelector((state) => selectActiveById(state, id));\n\n  return (\n    <Link id={id} to={to} className={active ? \"active\" : \"\"}>\n      {content}\n    </Link>\n  );\n};\n\nexport const Navbar = () => {\n  const dispatch = useDispatch();\n\n  const history = useHistory();\n\n  useEffect(() => {\n    if (history.location.pathname === \"/\") return;\n    history.push(\"/\");\n  }, [history]);\n\n  const highlightNavLink = (event) => {\n    if (event.target.tagName !== \"A\") return;\n\n    dispatch(changeActive(event.target.id));\n  };\n\n  return (\n    <StyledNav onClick={highlightNavLink}>\n      <NavLink id=\"products\" to=\"/\" content=\"Products\" />\n      <NavLink id=\"cart\" to=\"/cart\" content=\"Cart\" />\n    </StyledNav>\n  );\n};\n","import {createAsyncThunk, createEntityAdapter, createSelector, createSlice, nanoid,} from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const fetchProducts = createAsyncThunk(\r\n  \"products/fetchProducts\",\r\n  async () => {\r\n    const result = await axios.get(`${process.env.PUBLIC_URL}/products.json`);\r\n    return Object.values(result.data).map((obj) => {\r\n      obj.id = nanoid();\r\n      obj.hidden = (obj.available <= 0)\r\n      return obj;\r\n    });\r\n  }\r\n);\r\n\r\nconst productsAdapter = createEntityAdapter({\r\n  sortComparer: (a, b) => a.name.localeCompare(b.name),\r\n});\r\n\r\nconst initialState = productsAdapter.getInitialState({\r\n  status: \"idle\",\r\n  error: null,\r\n  sortBy: \"name\",\r\n  isAscending: true,\r\n  isOutVisible: false,\r\n});\r\n\r\nconst productsSlice = createSlice({\r\n  name: \"products\",\r\n  initialState,\r\n  reducers: {\r\n    addProduct: {\r\n      reducer: productsAdapter.addOne,\r\n      prepare(name, price, available) {\r\n        return {\r\n          payload: {\r\n            id: nanoid(),\r\n            name,\r\n            price,\r\n            available,\r\n          },\r\n        };\r\n      },\r\n    },\r\n    changeSortBy: {\r\n      reducer(state, action) {\r\n        const {sortBy} = action.payload;\r\n        state.sortBy = sortBy;\r\n      },\r\n      prepare(sortBy) {\r\n        return {\r\n          payload: {sortBy},\r\n        };\r\n      },\r\n    },\r\n    changeIsAscending: {\r\n      reducer(state, action) {\r\n        const {isAscending} = action.payload;\r\n        state.isAscending = isAscending;\r\n      },\r\n      prepare(isAscending) {\r\n        return {\r\n          payload: {isAscending},\r\n        };\r\n      },\r\n    },\r\n    sortProducts(state) {\r\n      let sortByFunc;\r\n      switch (state.sortBy) {\r\n        case \"name\":\r\n          sortByFunc = (a, b) => a.name.localeCompare(b.name);\r\n          break;\r\n        case \"price\":\r\n          sortByFunc = (a, b) => +a.price - +b.price;\r\n          break;\r\n        case \"availability\":\r\n          sortByFunc = (a, b) => +a.available - +b.available;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      const sortIds = (a, b) =>\r\n        sortByFunc(state.entities[a], state.entities[b]);\r\n\r\n      const isAscendingSort = state.isAscending\r\n        ? (a, b) => sortIds(a, b)\r\n        : (a, b) => sortIds(b, a);\r\n\r\n      state.ids.sort(isAscendingSort);\r\n    },\r\n    reverseOrder(state) {\r\n      state.ids.reverse();\r\n    },\r\n    changeIsOutVisible(state) {\r\n      state.isOutVisible = !state.isOutVisible;\r\n    },\r\n    buyCart: {\r\n      reducer(state, action) {\r\n        const cartItems = action.payload;\r\n\r\n        cartItems.forEach((item) => {\r\n          state.entities[item.id].available -= item.itemCount;\r\n        });\r\n      },\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [fetchProducts.pending]: (state) => {\r\n      state.status = \"loading\";\r\n    },\r\n    [fetchProducts.fulfilled]: (state, action) => {\r\n      state.status = \"succeeded\";\r\n      productsAdapter.upsertMany(state, action.payload);\r\n    },\r\n    [fetchProducts.rejected]: (state, action) => {\r\n      state.status = \"failed\";\r\n      state.error = action.error.message;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  addProduct,\r\n  buyCart,\r\n  changeIsOutVisible,\r\n  sortProducts,\r\n  reverseOrder,\r\n  changeSortBy,\r\n  changeIsAscending,\r\n} = productsSlice.actions;\r\n\r\nexport default productsSlice.reducer;\r\n\r\nexport const {\r\n  selectById: selectProductById,\r\n  selectIds: selectProductsIds,\r\n} = productsAdapter.getSelectors((state) => state.products);\r\n\r\nexport const selectIsOutVisible = createSelector(\r\n  (state) => state.products.isOutVisible,\r\n  (isOutVisible) => isOutVisible\r\n);\r\n\r\nexport const selectAvailableById = createSelector(\r\n  (state, productId) => selectProductById(state, productId),\r\n  (product) => product.available\r\n);\r\n\r\nexport const selectIsHiddenById = createSelector(\r\n  [\r\n    (state, productId) => selectAvailableById(state, productId),\r\n    selectIsOutVisible\r\n  ],\r\n  (available, isOutVisible) => available <= 0 && !isOutVisible\r\n)\r\n\r\nexport const selectIsAscending = createSelector(\r\n  [(state) => state.products.isAscending],\r\n  (isAscending) => isAscending\r\n);\r\n\r\nexport const selectSortBy = createSelector(\r\n  [(state) => state.products.sortBy],\r\n  (sortBy) => sortBy\r\n);\r\n","import React, { memo, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport { changeItemCount, deleteItem, selectCartItemById } from \"./cartSlice\";\n\nimport { selectAvailableById } from \"../products/productsSlice\";\n\nconst StyledDiv = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  flex-grow: 1;\n\n  margin-bottom: 20px;\n  padding: 0 10px;\n  height: 40px;\n\n  border: 1px solid #8f8f8f;\n  border-radius: 2px;\n\n  .carrItem-left {\n    display: flex;\n    align-items: center;\n  }\n\n  h4 {\n    padding: 0;\n    margin-right: 10px;\n  }\n\n  input {\n    font-size: inherit;\n    text-align: right;\n\n    width: 50px;\n    margin: 0 20px 0 15px;\n\n    border: 1px solid black;\n    border-radius: 5px;\n\n    &::-webkit-inner-spin-button,\n    &::-webkit-outer-spin-button {\n      opacity: 1;\n    }\n\n    &:focus {\n      outline: transparent;\n    }\n  }\n\n  button {\n    margin: 0 0 2px 15px;\n    padding: 0 3px 1px 3px;\n\n    font-size: 12px;\n\n    border-radius: 15px;\n  }\n`;\n\nexport const CartItem = memo(({ itemId }) => {\n  const dispatch = useDispatch();\n  const available = useSelector((state) => selectAvailableById(state, itemId));\n  const item = useSelector((state) => selectCartItemById(state, itemId));\n  const [isWarningHidden, setIsWarningHidden] = useState(\"hidden\");\n\n  const itemCountHandler = (event) => {\n    let value = event.target.value;\n\n    if (value === \"\") {\n      event.target.value = \"\";\n      return;\n    }\n\n    if (!value || value <= 0) value = 1;\n\n    if (value > available) {\n      value = available;\n      setIsWarningHidden(\"\");\n    }\n\n    event.target.value = value;\n    dispatch(changeItemCount(itemId, value));\n  };\n\n  useEffect(() => {\n    let timerId;\n\n    if (item.itemCount === available) {\n      if (isWarningHidden === \"\") {\n        timerId = setTimeout(() => {\n          setIsWarningHidden(\"hidden\");\n        }, 2000);\n      }\n    }\n\n    return () => clearTimeout(timerId);\n  }, [item.itemCount, available, isWarningHidden]);\n\n  return (\n    <StyledDiv>\n      <div className=\"carrItem-left\">\n        <h4>{item.name}</h4>\n        <span>({item.price * item.itemCount}$)</span>\n      </div>\n      <div>\n        <span className={isWarningHidden}>\n          <i>no more in stock</i>\n        </span>\n        <input\n          type=\"number\"\n          onInput={itemCountHandler}\n          defaultValue={item.itemCount}\n        />\n        <button onClick={() => dispatch(deleteItem(itemId))}>✖</button>\n      </div>\n    </StyledDiv>\n  );\n});\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport { CartItem } from \"./CartItem\";\n\nimport { selectCartItemsIds, selectTotalPrice } from \"./cartSlice\";\n\nconst StyledSection = styled.section`\n  margin-top: 20px;\n\n  h2 {\n    font-weight: normal;\n    margin-bottom: 20px;\n  }\n\n  .button-container {\n    display: flex;\n    justify-content: center;\n\n    button {\n      font-size: inherit;\n\n      padding: 6px 20px 5px 20px;\n\n      border-radius: 2px;\n    }\n  }\n`;\n\nconst TotalPrice = () => {\n  const totalPrice = useSelector(selectTotalPrice);\n\n  return <span>{totalPrice}$</span>;\n};\n\nexport const CartList = () => {\n  const cartIds = useSelector(selectCartItemsIds);\n\n  const cartItems = cartIds.map((itemId) => (\n    <CartItem key={itemId} itemId={itemId} />\n  ));\n\n  return (\n    <StyledSection>\n      {cartIds.length === 0 ? (\n        <span>Your cart is empty</span>\n      ) : (\n        <React.Fragment>\n          <h2>\n            Total price: <TotalPrice />\n          </h2>\n          {cartItems}\n          <div className=\"button-container\">\n            <Link to=\"/summary\">\n              <button>Next</button>\n            </Link>\n          </div>\n        </React.Fragment>\n      )}\n    </StyledSection>\n  );\n};\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nimport {\r\n  emptyCart,\r\n  selectAllCartItems,\r\n  selectCartCount,\r\n  selectTotalPrice,\r\n} from \"./cartSlice\";\r\nimport { buyCart } from \"../products/productsSlice\";\r\n\r\nconst StyledArticle = styled.article`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n\r\n  h2,\r\n  h3 {\r\n    margin: 0;\r\n  }\r\n\r\n  .congratulations {\r\n    margin: 25px 0 30px 0;\r\n\r\n    text-align: center;\r\n\r\n    h3 {\r\n      margin-top: 5px;\r\n      font-weight: normal;\r\n    }\r\n  }\r\n\r\n  .total {\r\n    display: flex;\r\n    justify-content: space-around;\r\n\r\n    margin-top: 25px;\r\n\r\n    h3 span {\r\n      font-weight: normal;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledTable = styled.table`\r\n  border: 1px solid black;\r\n  border-collapse: collapse;\r\n\r\n  th,\r\n  td {\r\n    border: 1px solid black;\r\n\r\n    padding: 5px 10px;\r\n\r\n    text-align: center;\r\n  }\r\n\r\n  td:first-child {\r\n    text-align: left;\r\n  }\r\n\r\n  th {\r\n    background-color: #e9e9e9;\r\n  }\r\n`;\r\n\r\nexport const Summary = () => {\r\n  const dispatch = useDispatch();\r\n  const cartItems = useSelector(selectAllCartItems);\r\n  const totalPrice = useSelector((state) => selectTotalPrice(state));\r\n  const cartCount = useSelector((state) => selectCartCount(state));\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(buyCart(cartItems));\r\n      dispatch(emptyCart());\r\n    };\r\n  }, [dispatch, cartItems]);\r\n\r\n  return (\r\n    <StyledArticle>\r\n      <section className=\"congratulations\">\r\n        <h2>Successful shopping!</h2>\r\n        <h3>Thank you</h3>\r\n      </section>\r\n      <section>\r\n        <StyledTable>\r\n          <thead>\r\n            <tr>\r\n              <th>Products</th>\r\n              <th>Price</th>\r\n              <th>Amount</th>\r\n              <th>Sum</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {cartItems.map((item) => (\r\n              <tr key={item.id}>\r\n                <td>{item.name}</td>\r\n                <td>{item.price}</td>\r\n                <td>{item.itemCount}</td>\r\n                <td>{item.price * item.itemCount}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </StyledTable>\r\n        <div className=\"total\">\r\n          <h3>\r\n            Items: <span>{cartCount} items</span>\r\n          </h3>\r\n          <h3>\r\n            Cost: <span>{totalPrice}$</span>\r\n          </h3>\r\n        </div>\r\n      </section>\r\n    </StyledArticle>\r\n  );\r\n};\r\n","import React, { useCallback } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { addProduct, sortProducts } from \"./productsSlice\";\r\n\r\nconst StyledDialog = styled.dialog`\r\n  border: 1px solid black;\r\n  border-radius: 10px;\r\n\r\n  padding: 0 30px 30px 30px;\r\n\r\n  h3 {\r\n    text-align: center;\r\n  }\r\n\r\n  form {\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    margin-top: 10px;\r\n\r\n    .input-block {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      align-items: center;\r\n\r\n      input {\r\n        width: 170px;\r\n\r\n        margin: 5px 0 10px 10px;\r\n        padding: 3px 0 3px 5px;\r\n\r\n        font-size: inherit;\r\n      }\r\n\r\n      label {\r\n        padding-bottom: 5px;\r\n      }\r\n    }\r\n\r\n    .buttons {\r\n      display: flex;\r\n      justify-content: space-around;\r\n\r\n      margin-top: 15px;\r\n\r\n      button {\r\n        width: 80px;\r\n        height: 30px;\r\n\r\n        border-radius: 10px;\r\n\r\n        font-size: inherit;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ProductModalWindow = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const formHandler = useCallback(\r\n    (event) => {\r\n      const target = event.target;\r\n      if (target.tagName !== \"BUTTON\") return;\r\n\r\n      const form = event.currentTarget;\r\n      const formElems = form.elements;\r\n\r\n      if (target.name === \"submit\") {\r\n        const [name, price, available] = [\r\n          formElems[\"name\"].value,\r\n          +formElems[\"price\"].value,\r\n          +formElems[\"available\"].value,\r\n        ];\r\n\r\n        dispatch(addProduct(name, price, available));\r\n        dispatch(sortProducts());\r\n      }\r\n\r\n      form.reset();\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <StyledDialog id=\"modal\">\r\n      <h3>Create New Product</h3>\r\n      <form method=\"dialog\" onClick={formHandler}>\r\n        <div className=\"input-block\">\r\n          <label>Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Apple iPhone\"\r\n            minLength=\"2\"\r\n            maxLength=\"60\"\r\n            autoComplete=\"off\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-block\">\r\n          <label>Price:</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"price\"\r\n            placeholder=\"500\"\r\n            min=\"0\"\r\n            max=\"10000000\"\r\n            autoComplete=\"off\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-block\">\r\n          <label>Available:</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"available\"\r\n            placeholder=\"40\"\r\n            min=\"0\"\r\n            max=\"100000\"\r\n            autoComplete=\"off\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"buttons\">\r\n          <button name=\"submit\">Submit</button>\r\n          <button name=\"cancel\">Cancel</button>\r\n        </div>\r\n      </form>\r\n    </StyledDialog>\r\n  );\r\n};\r\n","import React, {memo} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nimport {selectIsHiddenById, selectProductById} from \"./productsSlice\";\r\nimport {addToCart, selectCartItemById} from \"../cart/cartSlice\";\r\n\r\nconst StyledDiv = styled.div`\r\n  padding: 15px 10px;\r\n  margin: 10px;\r\n\r\n  border: 1px solid black;\r\n\r\n  width: 150px;\r\n  height: 110px;\r\n\r\n  line-height: 1.4em;\r\n\r\n  h3 {\r\n    margin: 0 0 8px 0;\r\n  }\r\n\r\n  .in-stock {\r\n    color: #008000;\r\n  }\r\n\r\n  .few-in-stock {\r\n    color: #ddb059;\r\n  }\r\n\r\n  .out-of-stock {\r\n    color: red;\r\n  }\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  margin-top: 10px;\r\n\r\n  button {\r\n    font-size: inherit;\r\n    padding: 3px 15px;\r\n    border-radius: 10px;\r\n  }\r\n\r\n  .all-in-cart {\r\n    padding-top: 3px;\r\n    font-style: italic;\r\n  }\r\n`;\r\n\r\nexport const ProductExcerpt = memo(({productId}) => {\r\n  const dispatch = useDispatch();\r\n  const product = useSelector((state) => selectProductById(state, productId));\r\n  const cartItem = useSelector((state) => selectCartItemById(state, productId));\r\n  const isHidden = useSelector((state) => selectIsHiddenById(state, productId));\r\n\r\n  const itemsInStock = product.available;\r\n\r\n  const isAvailable = itemsInStock > 0;\r\n\r\n  const isFew = itemsInStock < 5;\r\n  const isMaxInCart = cartItem && cartItem.itemCount >= itemsInStock;\r\n\r\n  const newCartItem = {\r\n    id: product.id,\r\n    name: product.name,\r\n    price: product.price,\r\n    itemCount: 1,\r\n  };\r\n\r\n  return (\r\n    <StyledDiv className={isHidden ? 'hidden' : ''}>\r\n      <h3>{product.name}</h3>\r\n      <div>\r\n        Price: <i>{product.price}</i>\r\n      </div>\r\n      <div>\r\n        {isAvailable ? (\r\n          <span title={`${itemsInStock} left`}>\r\n            {isFew ? (\r\n              <span className=\"few-in-stock\">A few left</span>\r\n            ) : (\r\n              <span className=\"in-stock\">In stock</span>\r\n            )}\r\n          </span>\r\n        ) : (\r\n          <span className=\"out-of-stock\">Out of stock</span>\r\n        )}\r\n      </div>\r\n      <ButtonContainer>\r\n        {isMaxInCart ? (\r\n          <span className=\"all-in-cart\">all in cart</span>\r\n        ) : (\r\n          <button\r\n            disabled={!isAvailable}\r\n            onClick={() => dispatch(addToCart(newCartItem))}\r\n          >\r\n            add to cart\r\n          </button>\r\n        )}\r\n      </ButtonContainer>\r\n    </StyledDiv>\r\n  )\r\n});\r\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport {\n  fetchProducts,\n  selectProductsIds,\n  sortProducts,\n} from \"./productsSlice\";\n\nimport { ProductExcerpt } from \"./ProductExcerpt\";\n\nconst StyledSection = styled.section`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const ProductsList = () => {\n  const dispatch = useDispatch();\n  const orderedProductsIds = useSelector(selectProductsIds);\n\n  const productsStatus = useSelector((state) => state.products.status);\n  const error = useSelector((state) => state.products.error);\n\n  useEffect(() => {\n    if (productsStatus === \"idle\") {\n      dispatch(fetchProducts());\n      dispatch(sortProducts());\n    }\n  }, [productsStatus, dispatch]);\n\n  let renderedProducts = () => {\n    switch (productsStatus) {\n      case \"loading\":\n        return <div>Loading...</div>;\n      case `succeeded`:\n        return orderedProductsIds.map((productId) => (\n          <ProductExcerpt key={productId} productId={productId} />\n        ));\n      case \"failed\":\n        return <div>{error}</div>;\n      default:\n        break;\n    }\n  };\n\n  return <StyledSection>{renderedProducts()}</StyledSection>;\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport {\n  changeIsAscending,\n  changeIsOutVisible,\n  changeSortBy,\n  reverseOrder,\n  selectIsAscending,\n  selectIsOutVisible,\n  selectSortBy,\n  sortProducts,\n} from \"./productsSlice\";\n\nconst StyledDiv = styled.div`\n  display: flex;\n  align-items: center;\n\n  margin: 15px 0 15px 10px;\n\n  select {\n    font-size: inherit;\n    font-family: inherit;\n\n    height: 30px;\n    width: 110px;\n\n    border-radius: 0;\n\n    &:focus {\n      outline: transparent;\n    }\n  }\n\n  button {\n    margin-left: 5px;\n    padding-bottom: 3px;\n\n    background-color: #e9e7e7;\n\n    font-size: inherit;\n\n    height: 30px;\n    width: 30px;\n\n    border: 1px solid black;\n  }\n\n  .checkbox-container {\n    display: flex;\n    align-items: center;\n\n    margin: 3px 0 0 25px;\n\n    input {\n      margin-right: 10px;\n    }\n  }\n`;\n\nconst SelectSortBy = () => {\n  const dispatch = useDispatch();\n  const sortBy = useSelector(selectSortBy);\n\n  return (\n    <select\n      onChange={(e) => {\n        dispatch(changeSortBy(e.target.value));\n        dispatch(sortProducts());\n      }}\n      defaultValue={sortBy}\n    >\n      <option value=\"name\">Name</option>\n      <option value=\"price\">Price</option>\n      <option value=\"availability\">Available</option>\n    </select>\n  );\n};\nconst OrderButton = () => {\n  const dispatch = useDispatch();\n  const isAscending = useSelector(selectIsAscending);\n\n  return (\n    <button\n      onClick={() => {\n        dispatch(changeIsAscending(!isAscending));\n        dispatch(reverseOrder());\n      }}\n    >\n      {isAscending ? \"↑\" : \"↓\"}\n    </button>\n  );\n};\n\nconst OutCheckbox = () => {\n  const dispatch = useDispatch();\n  const isOutVisible = useSelector(selectIsOutVisible);\n\n  return (\n    <div className=\"checkbox-container\">\n      <input\n        type=\"checkbox\"\n        onClick={() => dispatch(changeIsOutVisible())}\n        defaultChecked={isOutVisible}\n      />\n      <label>Show non-available</label>\n    </div>\n  );\n};\n\nexport const SortBy = () => (\n  <StyledDiv>\n    <SelectSortBy />\n    <OrderButton />\n    <OutCheckbox />\n  </StyledDiv>\n);\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\n\nimport { Header } from \"./app/Header\";\nimport { Navbar } from \"./app/Navbar\";\nimport { CartList } from \"./features/cart/CartList\";\nimport { Summary } from \"./features/cart/Summary\";\nimport { ProductModalWindow } from \"./features/products/ProductModalWindow\";\nimport { ProductsList } from \"./features/products/ProductsList\";\nimport { SortBy } from \"./features/products/SortBy\";\n\nconst Wrapper = styled.div`\n  position: absolute;\n\n  display: flex;\n  flex-direction: column;\n\n  width: 100%;\n  height: 100%;\n\n  main {\n    display: flex;\n    flex-grow: 1;\n\n    article {\n      flex-grow: 1;\n      padding: 0 25px 0 20px;\n    }\n  }\n`;\n\nconst isDialogSupported = () =>\n  typeof HTMLDialogElement === \"function\" && <ProductModalWindow />;\n\nfunction App() {\n  return (\n    <Router basename=\"/\">\n      <Wrapper>\n        {isDialogSupported()}\n        <Header />\n        <main>\n          <Navbar />\n          <article>\n            <Switch>\n              <Route exact path=\"/\">\n                <SortBy />\n                <ProductsList />\n              </Route>\n\n              <Route exact path=\"/cart\">\n                <CartList />\n              </Route>\n\n              <Route exact path=\"/summary\">\n                <Summary />\n              </Route>\n\n              <Redirect to=\"/\" />\n            </Switch>\n          </article>\n        </main>\n      </Wrapper>\n    </Router>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport productsReducer from \"../features/products/productsSlice\";\r\nimport navigationReducer from \"../features/navigation/navigationSlice\";\r\nimport cartReducer from \"../features/cart/cartSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    products: productsReducer,\r\n    navigation: navigationReducer,\r\n    cart: cartReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}